<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/cache 
http://www.springframework.org/schema/cache/spring-cache.xsd
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
">
    <mvc:annotation-driven/>
    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 自动扫描(自动注入)，扫描com.emart.mdms.service这个包以及它的子包的所有使用@注解标注的类 -->
    <context:component-scan base-package="com.emart.service"/>
    <!--缓存配置-->
    <!-- generic cache manager -->
    <context:annotation-config/>

    <cache:annotation-driven/>

    <bean id="cacheManager"
          class="org.springframework.cache.concurrent.ConcurrentMapCacheManager"/>


    <!-- 	<context:annotation-config /> -->
    <!--     <mvc:annotation-driven/> -->

    <bean id="jsonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean id="operationInterceptor2" class="utils.aop.OperationInterceptor"/>
    <aop:config>
        <aop:aspect id="operationInterceptorAspect2" ref="operationInterceptor2"><!--调用日志类-->
            <aop:pointcut id="log2" expression="execution(* com.emart.service..*.*(..))"/><!--配置在log包下所有的类在调用之前都会被拦截-->
            <aop:before pointcut-ref="log2" method="before2"/><!--在log包下面所有的类的所有方法被调用之前都调用MyLog中的before方法-->
            <aop:after pointcut-ref="log2" method="after2"/><!--在log包下面所有的类的所有方法被调用之前都调用MyLog中的after方法-->
            <aop:pointcut id="log3"
                          expression="execution(* com.emart.service..*.insert*(..)) or execution(* com.emart.service..*.update*(..)) or execution(* com.emart.service..*.delete*(..)) or execution(* com.emart.service..*.save*(..)) or execution(* com.emart.dsdq.com.emart.service..*.app*(..))"/>
            <aop:after-returning pointcut-ref="log3" arg-names="joinPoint,retValue" returning="retValue"
                                 method="afterReturning3"/>
        </aop:aspect>
    </aop:config>

</beans>