<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:tx="http://www.springframework.org/schema/tx" 
xmlns:aop="http://www.springframework.org/schema/aop" 
xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
">



	<!-- 配置数据源 -->
	<bean name="dataSource_dsdq" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 配置数据源的链接地址、账号、密码 -->
		<property name="url" value="${mys_jdbc_url}" />
		<property name="username" value="${mys_jdbc_username}" />
		<property name="password" value="${mys_jdbc_password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="5" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="50" />
		<!-- 连接池最大空闲 -->
		<!--<property name="maxIdle" value="30" /> -->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="3" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />
		<!-- <property name="poolPreparedStatements" value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->
		<property name="validationQuery" value="${mys_validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="7200" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />
		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat" />	
		<!--<property name="keepAlive" value="true" />-->
	</bean>

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_dsdq" />
		<!-- 加载配置文件 -->
		<property name="configLocation" value="classpath:myBatis-config.xml"/>
		<!-- 指定实体类包名，自动将实体类简单类名映射成别名 -->
		<property name="typeAliasesPackage" value="com.emart.bean"/>
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="mapperLocations" value="classpath:mybatis_mysql/**/*.xml"/>
 		
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.emart.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_dsdq" />
		<qualifier value="dsdq_instance" /> 
	</bean>
	<!-- atomikos事务管理器 -->
		<!--<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"-->
			  <!--init-method="init" destroy-method="close">-->
			<!--<description>UserTransactionManager</description>-->
			<!--<property name="forceShutdown">-->
				<!--<value>true</value>-->
			<!--</property>-->
		<!--</bean>-->
	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />




	<!-- 注解方式配置事物 -->

</beans>